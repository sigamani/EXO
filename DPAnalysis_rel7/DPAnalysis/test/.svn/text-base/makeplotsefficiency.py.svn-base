from os import listdir
import ROOT
from ROOT import TCanvas, gStyle, TFile, TH1F, gROOT, TLegend, THStack, TColor, kOrange, kRed, kWhite, kBlack,TPaveText,TAttMarker

#fill the tree with desired variables
def FillHist(met,photonPt,dxy,dz,sMinPho,sMajPho,nJets,tree):

    for event in tree:
        if event.nJets <= 1:
            continue
        if event.met < 30:
            continue
        met.Fill(event.met)
        for j in range(len(event.phoPt)):
            photonPt.Fill(event.phoPt[j])
        for j in range(len(event.phoDxy)):
            dxy.Fill(event.phoDxy[j])
        for j in range(len(event.phoDz)):
            dz.Fill(event.phoDz[j])
        for j in range(len(event.phoPt)):
            sMinPho.Fill(event.sMinPho[j])
        for j in range(len(event.phoPt)):
            sMajPho.Fill(event.sMajPho[j])
        nJets.Fill(event.nJets)

#label function
def label(quadrant):
    if (quadrant!=1 and quadrant !=2):
        print "This quadrant is not defined, choose a value of 1 or 2!"
    else:
        if (quadrant == 1):
            x1 = 0.1
            x2 = 0.25
            y1 = 0.94
            y2 = 1.0
        if (quadrant == 2):
            x1 = 0.75
            x2 = 0.9
            y1 = 0.94
            y2 = 1.0


    headlabel = TPaveText( x1, y1, x2, y2, "brNDC" )
    if (quadrant == 1):
        headlabel.AddText("CMS = ??? fb^{-1}")
    if (quadrant == 2):
        headlabel.AddText("#sqrt{s} = 8 TeV")

    headlabel.SetFillColor(kWhite)
    headlabel.SetTextSize(0.034)
    headlabel.SetTextFont(42)
    headlabel.SetBorderSize(0)
    headlabel.SetShadowColor(kWhite)

    return headlabel

#drawing a histogram
def DrawHist(string,bkg,signal,data,stack,cmslabel,sqrtlabel,text):
    signal.SetLineColor(kRed)
    bkg.SetFillColor(kOrange)
    data.SetMarkerStyle(20)
    data.SetMarkerSize(0.5)
    data.SetMarkerColor(kBlack)

    bkg.GetYaxis().SetRangeUser(1e-3,1e6)

    stack.Add(bkg)

    c1 = TCanvas("c1","c1",600,500);
    gStyle.SetOptStat(0)
    c1.SetLogy();
    leg = TLegend(0.55,0.75,0.89,0.89)
    leg.SetFillColor(kWhite)
    leg.SetTextSize(0.038)
    leg.SetTextFont(42)
    leg.SetBorderSize(0)
    leg.AddEntry(data, "DATA","pe")
    leg.AddEntry(bkg, "bkg","f")
    leg.AddEntry(signal, "signal","l")
    stack.Draw()
    stack.GetYaxis().SetTitle("Number of Events")
    stack.GetYaxis().SetTitleSize(0.034)
    stack.GetXaxis().SetTitle(string)
    stack.GetXaxis().SetTitleSize(0.045)
    c1.Update()
    signal.Draw("same")
    data.Draw("PEsame")
    leg.Draw("same")
    cmslabel.Draw("same")
    sqrtlabel.Draw("same")
    c1.SaveAs(string+"ctau"+text+".pdf")

def make(maplist,text):                      
    #Cross section for different bins: 0-5:bkg, 7: signal
    sigma = [3322.309,558.2865,108.0068,30.12207,2.138632,0.2119244,0.0145]

    #open histogram, one to add all data for bkg, one for signal and one for data
    metbkg = TH1F("metbkg","",200,0,400)
    metsignal = TH1F("metsignal","",200,0,400)
    metdata = TH1F("metdata","",200,0,400)
    hsmet = THStack("hsmet","")

    photonPtbkg = TH1F("photonPtbkg","",200,0,400)
    photonPtsignal = TH1F("photonPtsignal","",200,0,400)
    photonPtdata = TH1F("photonPtdata","",200,0,400)
    hsphotonPt = THStack("hsphotonPt","")

    dxybkg = TH1F("dxybkg","",100,-100,100)
    dxysignal = TH1F("dxysignal","",100,-100,100)
    dxydata = TH1F("dxydata","",100,-100,100)
    hsdxy = THStack("hsdxy","")

    dzbkg = TH1F("dzbkg","",100,-100,100)
    dzsignal = TH1F("dzsignal","",100,-100,100)
    dzdata = TH1F("dzdata","",100,-100,100)
    hsdz = THStack("hsdz","")

    nJetsbkg = TH1F("nJetsbkg","",10,0,10)
    nJetssignal = TH1F("nJetssignal","",10,0,10)
    nJetsdata = TH1F("nJetsdata","",10,0,10)
    hsnJets = THStack("hsnJets","")

    sMajPhobkg = TH1F("sMajPhobkg","",100,0,2)
    sMajPhosignal = TH1F("sMajPhosignal","",100,0,2)
    sMajPhodata = TH1F("sMajPhodata","",100,0,2)
    hssMajPho = THStack("hssMajPho","")

    sMinPhobkg = TH1F("sMinPhobkg","",100,0,0.5)
    sMinPhosignal = TH1F("sMinPhosignal","",100,0,0.5)
    sMinPhodata = TH1F("sMinPhodata","",100,0,0.5)
    hssMinPho = THStack("hsMinPho","")

    total = 0
    trigger = 0
    vertex = 0
    photon = 0
    beamHalo = 0
    jet = 0
    met = 0
    nentries = 0
    metcut = 0
    jetcut = 0
    conversion = 0

    #loop over all bkg maps to add all events in one histogram
    for item in range(6):

        print "Total files: " + str(len(maplist)) + ". Busy on: " + str(item+1)
        data=TFile.Open(maplist[item])
        tree = data.Get("DPAnalysis")
        entries = data.Get("Entries")
        eff = 1./entries.GetBinContent(1)

        #scaling needed for different cross sections, assuming lumin of 20 000 pb^-1
        scale = 10000*sigma[item]*eff

        metbkgtemp = TH1F("metbkgtemp","",200,0,400)
        photonPtbkgtemp = TH1F("photonPtbkgtemp","",200,0,400)
        dxybkgtemp = TH1F("dxybkgtemp","",100,-100,100)
        dzbkgtemp = TH1F("dzbkgtemp","",100,-100,100)
        sMinPhobkgtemp = TH1F("sMinPhobkgtemp","",100,0,0.5)
        sMajPhobkgtemp = TH1F("sMajPhobkgtemp","",100,0,2)
        nJetsbkgtemp = TH1F("nJetsbkgtemp","",10,0,10)
         
        FillHist(metbkgtemp,photonPtbkgtemp,dxybkgtemp,dzbkgtemp,sMinPhobkgtemp,sMajPhobkgtemp,nJetsbkgtemp,tree)

        total = total + entries.GetBinContent(1)
        trigger = trigger + entries.GetBinContent(2)
        vertex = vertex + entries.GetBinContent(3)
        photon = photon + entries.GetBinContent(4)
        beamhalo = beamHalo + entries.GetBinContent(5)
        jet = jet + entries.GetBinContent(6)
        met = met + entries.GetBinContent(7)
        nentries = nentries + tree.GetEntries()
        metcut = metcut + tree.GetEntries("met>=30")
        jetcut = jetcut + tree.GetEntries("met>=30 && nJets > 1")
        conversion = conversion + tree.GetEntries("phoDxy > -900")
        
        metbkgtemp.Scale(scale)
        photonPtbkgtemp.Scale(scale)
        dxybkgtemp.Scale(scale)
        dzbkgtemp.Scale(scale)
        sMinPhobkgtemp.Scale(scale)
        sMajPhobkgtemp.Scale(scale)
        nJetsbkgtemp.Scale(scale)

        metbkg.Add(metbkgtemp,1.)
        photonPtbkg.Add(photonPtbkgtemp,1.)
        dxybkg.Add(dxybkgtemp,1.)
        dzbkg.Add(dzbkgtemp,1.)
        sMinPhobkg.Add(sMinPhobkgtemp,1.)
        sMajPhobkg.Add(sMajPhobkgtemp,1.)
        nJetsbkgtemp.Add(nJetsbkgtemp,1.)
        data.Close()

    print "bkg"
    print "Total: " + str(total)
    print "Trigger: " + str(trigger)
    print "Vertex: " + str(vertex)
    print "Photon: " + str(photon)
    print "Beamhalo: " + str(beamhalo)
    print "jet: " + str(jet)
    print "met: " + str(met)
    print "entries:" + str(nentries)
    print "metcut: " + str(metcut)
    print "jetcut: " + str(jetcut)
    print "Conversion: " + str(conversion)
    print ""

    total = 0
    trigger = 0
    vertex = 0
    photon = 0
    beamHalo = 0
    jet = 0
    met = 0
    nentries = 0
    metcut = 0
    jetcut = 0
    conversion = 0

    #loop over signal file
    print "Total files: " + str(len(maplist)) + ". Busy on: 7"
    data=TFile.Open(maplist[6])
    tree = data.Get("DPAnalysis")
    entries= data.Get("Entries")
    eff = 1./entries.GetBinContent(1)

    scale = 10000*sigma[6]*eff
    
    metsignaltemp = TH1F("metsignaltemp","",200,0,400)
    photonPtsignaltemp = TH1F("photonPtsignaltemp","",200,0,400)
    dxysignaltemp = TH1F("dxysignaltemp","",100,-100,100)
    dzsignaltemp = TH1F("dzsignaltemp","",100,-100,100)    
    sMinPhosignaltemp = TH1F("sMinPhosignaltemp","",100,0,0.5)
    sMajPhosignaltemp = TH1F("sMajPhosignaltemp","",100,0,2)
    nJetssignaltemp = TH1F("nJetssignaltemp","",10,0,10)
    
    FillHist(metsignaltemp,photonPtsignaltemp,dxysignaltemp,dzsignaltemp,sMinPhosignaltemp,sMajPhosignaltemp,nJetssignaltemp,tree)

    total = total + entries.GetBinContent(1)
    trigger = trigger + entries.GetBinContent(2)
    vertex = vertex + entries.GetBinContent(3)
    photon = photon + entries.GetBinContent(4)
    beamhalo = beamHalo + entries.GetBinContent(5)
    jet = jet + entries.GetBinContent(6)
    met = met + entries.GetBinContent(7)
    nentries = nentries + tree.GetEntries()
    metcut = metcut+ tree.GetEntries("met>=30")
    jetcut = jetcut+ tree.GetEntries("met>=30 && nJets > 1")
    conversion = conversion + tree.GetEntries("phoDxy > -900")
    
    metsignaltemp.Scale(scale)
    photonPtsignaltemp.Scale(scale)
    dxysignaltemp.Scale(scale)
    dzsignaltemp.Scale(scale)
    sMinPhosignaltemp.Scale(scale)
    sMajPhosignaltemp.Scale(scale)
    nJetssignaltemp.Scale(scale)
        
    metsignal.Add(metsignaltemp,1.)
    photonPtsignal.Add(photonPtsignaltemp,1.)
    dxysignal.Add(dxysignaltemp,1.)
    dzsignal.Add(dzsignaltemp,1.)
    sMinPhosignal.Add(sMinPhosignaltemp,1.)
    sMajPhosignal.Add(sMajPhosignaltemp,1.)
    nJetssignaltemp.Add(nJetssignaltemp,1.)
    
    data.Close()

    print "signal"
    print "Total: " + str(total)
    print "Trigger: " + str(trigger)
    print "Vertex: " + str(vertex)
    print "Photon: " + str(photon)
    print "Beamhalo: " + str(beamhalo)
    print "jet: " + str(jet)
    print "met: " + str(met)
    print "entries:" + str(nentries)
    print "metcut: " + str(metcut)
    print "jetcut: " + str(jetcut)        
    print "Conversion: " +str(conversion)                            
    print ""

    total = 0
    trigger = 0
    vertex = 0
    photon = 0
    beamHalo = 0
    jet = 0
    met = 0
    nentries = 0
    metcut = 0
    jetcut = 0
    conversion = 0                            

    #loop over data files
    for item in range(7,9):

        print "Total files: " + str(len(maplist)) + ". Busy on: " + str(item+1)
        data=TFile.Open(maplist[item])
        tree = data.Get("DPAnalysis")
        entries= data.Get("Entries")
    
        metdatatemp = TH1F("metdatatemp","",200,0,400)
        photonPtdatatemp = TH1F("photonPtdatatemp","",200,0,400)
        dxydatatemp = TH1F("dxydatatemp","",100,-100,100)
        dzdatatemp = TH1F("dzdatatemp","",100,-100,100)
        sMinPhodatatemp = TH1F("sMinPhodatatemp","",100,0,0.5)
        sMajPhodatatemp = TH1F("sMajPhodatatemp","",100,0,2)
        nJetsdatatemp = TH1F("nJetsdatatemp","",10,0,10)

        FillHist(metdatatemp,photonPtdatatemp,dxydatatemp,dzdatatemp,sMinPhodatatemp,sMajPhodatatemp,nJetsdatatemp,tree)
 
        total = total + entries.GetBinContent(1)
        trigger = trigger + entries.GetBinContent(2)
        vertex = vertex + entries.GetBinContent(3)
        photon = photon + entries.GetBinContent(4)
        beamhalo = beamHalo + entries.GetBinContent(5)
        jet = jet + entries.GetBinContent(6)
        met = met + entries.GetBinContent(7)
        nentries = nentries + tree.GetEntries()
        metcut = metcut+ tree.GetEntries("met>=30")
        jetcut = jetcut+ tree.GetEntries("met>=30 && nJets > 1")
        conversion = conversion + tree.GetEntries("phoDxy > -900")
        
        metdata.Add(metdatatemp,1.)
        photonPtdata.Add(photonPtdatatemp,1.)
        dxydata.Add(dxydatatemp,1.)
        dzdata.Add(dzdatatemp,1.)
        sMinPhodata.Add(sMinPhodatatemp,1.)
        sMajPhodata.Add(sMajPhodatatemp,1.)
        nJetsdata.Add(nJetsdatatemp,1.)
    
        data.Close()

    print "data"
    print "Total: " + str(total)
    print "Trigger: " + str(trigger)
    print "Vertex: " + str(vertex)
    print "Photon: " + str(photon)
    print "Beamhalo: " + str(beamhalo)
    print "jet: " + str(jet)
    print "met: " + str(met)
    print "entries:" + str(nentries)
    print "metcut: " + str(metcut)
    print "jetcut: " + str(jetcut)        
    print "Conversion: " +str(conversion)                    

    #setting the labels
    cmslabel = label(1)
    sqrtlabel = label(2)
    
    #drawing the met, photonPt, dXY, dZ, sMinPho, sMajPho and nJets histograms
    DrawHist("met",metbkg,metsignal,metdata,hsmet,cmslabel,sqrtlabel,text)
    DrawHist("photonpt",photonPtbkg,photonPtsignal,photonPtdata,hsphotonPt,cmslabel,sqrtlabel,text)
    DrawHist("dxy",dxybkg,dxysignal,dxydata,hsdxy,cmslabel,sqrtlabel,text)
    DrawHist("dz",dzbkg,dzsignal,dzdata,hsdz,cmslabel,sqrtlabel,text)
    DrawHist("sMinPho",sMinPhobkg,sMinPhosignal,sMinPhodata,hssMinPho,cmslabel,sqrtlabel,text)
    DrawHist("sMajPho",sMajPhobkg,sMajPhosignal,sMajPhodata,hssMajPho,cmslabel,sqrtlabel,text)
    DrawHist("nJets",nJetsbkg,nJetssignal,nJetsdata,hsnJets,cmslabel,sqrtlabel,text)


def main():
    input = raw_input("Choose between ctau equal to 1 (a), 10 (b), 20 (c), 100 (d), 250 (e), 500 (f), 4000 (g) and 6000 (h).")
    print ""

    #saving the maps: 0-5:bkg, 6: signal, 7-8:data 
    maplist = ["bkg50to80.root","bkg80to120.root","bkg120to170.root","bkg170to300.root","bkg300to470.root","bkg470to800.root","","Run2012Cdata.root","Run2012Ddata.root"]
    text = ""

    if input == 'a':
        maplist[6] = "Signalctau1.root"
        text = "1"

    elif input == 'b':
        maplist[6] = "Signalctau10.root"
        text = "10"

    elif input == 'c':
        maplist[6] = "Signalctau20.root"
        text = "20"

    elif input == 'd':
        maplist[6] = "Signalctau100.root"
        text = "100"

    elif input == 'e':
        maplist[6] = "Signalctau250.root"
        text = "250"

    elif input == 'f':
        maplist[6] = "Signalctau500.root"
        text = "500"

    elif input == 'g':
        maplist[6] = "Signalctau4000.root"
        text = "4000"

    elif input == 'h':
        maplist[6] = "Signalctau6000.root"
        text = "6000"

    else:
        print "You have to chose between a, b, c, d, e, f, g or h!"
        print ""
        print ""

    make(maplist,text)

if __name__ == "__main__":
    main()
